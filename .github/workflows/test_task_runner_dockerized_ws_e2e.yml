---
# Task Runner E2E tests for dockerized approach

name: Task_Runner_Dockerized_E2E  # Please do not modify the name as it is used in the composite action

on:
  workflow_dispatch:
    inputs:
      num_rounds:
        description: "Number of rounds to train"
        required: false
        default: "5"
        type: string
      num_collaborators:
        description: "Number of collaborators"
        required: false
        default: "2"
        type: string
      jobs_to_run:
        description: "Jobs to run"
        type: choice
        default: "all"
        options:
          - all
          - test_with_tls
          - test_with_non_tls
          - test_with_no_client_auth
          - test_memory_logs
        required: false

permissions:
  contents: read

# Environment variables common for all the jobs
env:
  NUM_ROUNDS: ${{ inputs.num_rounds || '5' }}
  NUM_COLLABORATORS: ${{ inputs.num_collaborators || '2' }}
  JOBS_TO_RUN: ${{ inputs.jobs_to_run || 'all' }}

jobs:
  input_selection:
    name: Input value selection
    runs-on: ubuntu-22.04
    outputs:
      selected_jobs: ${{ steps.input_selection.outputs.jobs_to_run }}
    steps:
      - name: Job to select input values
        id: input_selection
        run: |
          echo "jobs_to_run=${{ env.JOBS_TO_RUN }}" >> "$GITHUB_OUTPUT"

  test_with_tls:
    name: With TLS
    needs: input_selection
    if: needs.input_selection.outputs.selected_jobs == 'all' || needs.input_selection.outputs.selected_jobs == 'test_with_tls'
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    strategy:
      matrix:
        model_name: ["keras/mnist"]
        python_version: ["3.10", "3.11", "3.12"]
      fail-fast: false # do not immediately fail if one of the combinations fail

    env:
      MODEL_NAME: ${{ matrix.model_name }}
      PYTHON_VERSION: ${{ matrix.python_version }}

    steps:
      - name: Checkout OpenFL repository
        id: checkout_openfl
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 2 # needed for detecting changes
          submodules: "true"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Pre test run
        uses: ./.github/actions/tr_pre_test_run
        if: ${{ always() }}

      - name: Run Task Runner E2E tests with TLS
        id: run_tests
        run: |
          python -m pytest -s tests/end_to_end/test_suites/task_runner_tests.py \
          -m task_runner_dockerized_ws --model_name ${{ env.MODEL_NAME }} \
          --num_rounds ${{ env.NUM_ROUNDS }} --num_collaborators ${{ env.NUM_COLLABORATORS }}
          echo "Task runner end to end test run completed"

      - name: Post test run
        uses: ./.github/actions/tr_post_test_run
        if: ${{ always() }}
        with:
          test_type: "tr_tls_dockerized_ws"

  test_with_non_tls_dockerized_ws:
    name: Without TLS
    needs: input_selection
    if: needs.input_selection.outputs.selected_jobs == 'all' || needs.input_selection.outputs.selected_jobs == 'test_with_non_tls'
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    strategy:
      matrix:
        model_name: ["keras/mnist"]
        python_version: ["3.10"]
      fail-fast: false # do not immediately fail if one of the combinations fail

    env:
      MODEL_NAME: ${{ matrix.model_name }}
      PYTHON_VERSION: ${{ matrix.python_version }}

    steps:
      - name: Checkout OpenFL repository
        id: checkout_openfl
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 2 # needed for detecting changes
          submodules: "true"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Pre test run
        uses: ./.github/actions/tr_pre_test_run
        if: ${{ always() }}

      - name: Run Task Runner E2E tests without TLS
        id: run_tests
        run: |
          python -m pytest -s tests/end_to_end/test_suites/task_runner_tests.py \
          -m task_runner_dockerized_ws --model_name ${{ env.MODEL_NAME }} \
          --num_rounds ${{ env.NUM_ROUNDS }} --num_collaborators ${{ env.NUM_COLLABORATORS }} --disable_tls
          echo "Task runner end to end test run completed"

      - name: Post test run
        uses: ./.github/actions/tr_post_test_run
        if: ${{ always() }}
        with:
          test_type: "tr_non_tls_dockerized_ws"

  test_with_no_client_auth_dockerized_ws:
    name: Without client auth
    needs: input_selection
    if: needs.input_selection.outputs.selected_jobs == 'all' || needs.input_selection.outputs.selected_jobs == 'test_with_no_client_auth'
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    strategy:
      matrix:
        model_name: ["keras/mnist"]
        python_version: ["3.10"]
      fail-fast: false # do not immediately fail if one of the combinations fail

    env:
      MODEL_NAME: ${{ matrix.model_name }}
      PYTHON_VERSION: ${{ matrix.python_version }}

    steps:
      - name: Checkout OpenFL repository
        id: checkout_openfl
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 2 # needed for detecting changes
          submodules: "true"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Pre test run
        uses: ./.github/actions/tr_pre_test_run
        if: ${{ always() }}

      - name: Run Task Runner E2E tests without TLS
        id: run_tests
        run: |
          python -m pytest -s tests/end_to_end/test_suites/task_runner_tests.py \
          -m task_runner_dockerized_ws --model_name ${{ env.MODEL_NAME }} \
          --num_rounds ${{ env.NUM_ROUNDS }} --num_collaborators ${{ env.NUM_COLLABORATORS }} --disable_client_auth
          echo "Task runner end to end test run completed"

      - name: Post test run
        uses: ./.github/actions/tr_post_test_run
        if: ${{ always() }}
        with:
          test_type: "tr_no_client_auth_dockerized_ws"

  test_memory_logs_dockerized_ws:
    name: With memory logs
    needs: input_selection
    if: needs.input_selection.outputs.selected_jobs == 'all' || needs.input_selection.outputs.selected_jobs == 'test_memory_logs'
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    strategy:
      matrix:
        model_name: ["keras/mnist"]
        python_version: ["3.10"]
      fail-fast: false # do not immediately fail if one of the combinations fail

    env:
      MODEL_NAME: ${{ matrix.model_name }}
      PYTHON_VERSION: ${{ matrix.python_version }}

    steps:
      - name: Checkout OpenFL repository
        id: checkout_openfl
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 2 # needed for detecting changes
          submodules: "true"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Pre test run
        uses: ./.github/actions/tr_pre_test_run
        if: ${{ always() }}

      - name: Run Task Runner E2E tests with TLS and memory logs
        id: run_tests
        run: |
          python -m pytest -s tests/end_to_end/test_suites/memory_logs_tests.py \
          -k test_log_memory_usage_dockerized_ws --model_name ${{ env.MODEL_NAME }} \
          --num_rounds ${{ env.NUM_ROUNDS }} --num_collaborators ${{ env.NUM_COLLABORATORS }} \
          --log_memory_usage
          echo "Task runner memory logs test run completed"

      - name: Post test run
        uses: ./.github/actions/tr_post_test_run
        if: ${{ always() }}
        with:
          test_type: "tr_tls_memory_logs_dockerized_ws"

  # TODO - remove it before merging.
  test_with_tls_restart:
    name: With TLS
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    strategy:
      matrix:
        model_name: ["keras/mnist"]
        python_version: ["3.10", "3.11", "3.12"]
      fail-fast: false # do not immediately fail if one of the combinations fail

    env:
      MODEL_NAME: ${{ matrix.model_name }}
      PYTHON_VERSION: ${{ matrix.python_version }}

    steps:
      - name: Checkout OpenFL repository
        id: checkout_openfl
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 2 # needed for detecting changes
          submodules: "true"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Pre test run
        uses: ./.github/actions/tr_pre_test_run
        if: ${{ always() }}

      - name: Run Task Runner E2E tests with TLS
        id: run_tests
        run: |
          python -m pytest -s tests/end_to_end/test_suites/tr_resiliency_tests.py \
          -m task_runner_dockerized_ws --model_name ${{ env.MODEL_NAME }} \
          --num_collaborators ${{ env.NUM_COLLABORATORS }}
          echo "Task runner end to end test run completed"

      - name: Post test run
        uses: ./.github/actions/tr_post_test_run
        if: ${{ always() }}
        with:
          test_type: "tr_tls_with_restart" 

  test_with_non_tls_restart:
    name: Without TLS
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    strategy:
      matrix:
        model_name: ["keras/mnist"]
        python_version: ["3.10", "3.11", "3.12"]
      fail-fast: false # do not immediately fail if one of the combinations fail

    env:
      MODEL_NAME: ${{ matrix.model_name }}
      PYTHON_VERSION: ${{ matrix.python_version }}

    steps:
      - name: Checkout OpenFL repository
        id: checkout_openfl
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 2 # needed for detecting changes
          submodules: "true"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Pre test run
        uses: ./.github/actions/tr_pre_test_run
        if: ${{ always() }}

      - name: Run Task Runner E2E tests without TLS
        id: run_tests
        run: |
          python -m pytest -s tests/end_to_end/test_suites/tr_resiliency_tests.py \
          -m task_runner_dockerized_ws --model_name ${{ env.MODEL_NAME }} \
          --num_collaborators ${{ env.NUM_COLLABORATORS }}
          echo "Task runner end to end test run completed"

      - name: Post test run
        uses: ./.github/actions/tr_post_test_run
        if: ${{ always() }}
        with:
          test_type: "tr_non_tls_restart"

  test_with_no_client_auth_restart:
    name: Without client auth
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    strategy:
      matrix:
        model_name: ["keras/mnist"]
        python_version: ["3.10", "3.11", "3.12"]
      fail-fast: false # do not immediately fail if one of the combinations fail

    env:
      MODEL_NAME: ${{ matrix.model_name }}
      PYTHON_VERSION: ${{ matrix.python_version }}

    steps:
      - name: Checkout OpenFL repository
        id: checkout_openfl
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 2 # needed for detecting changes
          submodules: "true"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Pre test run
        uses: ./.github/actions/tr_pre_test_run
        if: ${{ always() }}

      - name: Run Task Runner E2E tests without TLS
        id: run_tests
        run: |
          python -m pytest -s tests/end_to_end/test_suites/tr_resiliency_tests.py \
          -m task_runner_dockerized_ws --model_name ${{ env.MODEL_NAME }} \
          --num_collaborators ${{ env.NUM_COLLABORATORS }}
          echo "Task runner end to end test run completed"

      - name: Post test run
        uses: ./.github/actions/tr_post_test_run
        if: ${{ always() }}
        with:
          test_type: 'tr_no_client_auth_restart'
